# more information: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
# top-most EditorConfig file
root = true

# =================================================================================================
# C# and JSON
# =================================================================================================
[*.{cs,json}]

# 4 space indentation
indent_style = space
indent_size = 4

# windows style newlines with a newline ending every file
end_of_line = crlf
insert_final_newline = true

# no whitespaces at end of line
trim_trailing_whitespace = true

# allman braces
indent_brace_style = K&R

# =================================================================================================
# C#
# =================================================================================================
[*.{cs,xaml}]
guidelines = 80, 100, 120

# -------------------------------------------------------------------------------------------------
# LANGUAGE CONVENTIONS
# -------------------------------------------------------------------------------------------------
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#language-conventions

# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true

# use of this
dotnet_style_qualification_for_field = false : none;
dotnet_style_qualification_for_property = false : none;
dotnet_style_qualification_for_method = false : none;
dotnet_style_qualification_for_event = false : none;

# prefer "int" over "Int32"
dotnet_style_predefined_type_for_locals_parameters_members = true : warning
dotnet_style_predefined_type_for_member_access = true : warning

# prefer objects and collections to be initialized using initializers when possible
dotnet_style_object_initializer = true : warning
dotnet_style_collection_initializer = true : warning

# prefer tuple names to ItemX properties
dotnet_style_explicit_tuple_names = true : warning

# prefer null coalescing expressions to ternary operator checking
# dotnet_style_coalesce_expression = true : error

# prefer to use null-conditional operator when possible
# dotnet_style_null_propagation = true : warning

# prefer var
csharp_style_var_for_built_in_types = true : suggestion
csharp_style_var_when_type_is_apparent = true : suggestion
csharp_style_var_elsewhere = true : suggestion

# expression bodied members
csharp_style_expression_bodied_methods = false : none
csharp_style_expression_bodied_constructors = false : none
csharp_style_expression_bodied_operators = false : none
csharp_style_expression_bodied_properties = true : suggestion
csharp_style_expression_bodied_indexers = true : suggestion
csharp_style_expression_bodied_accessors = true : suggestion

# pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check = true : suggestion

# inline variable declarations
csharp_style_inlined_variable_declaration = true : suggestion

# expression-level preferences
csharp_prefer_simple_default_expression = true : suggestion
csharp_style_deconstructed_variable_declaration = true : suggestion
csharp_style_pattern_local_over_anonymous_function = true : suggestion

# null checking preferences
csharp_style_throw_expression = true : suggestion
csharp_style_conditional_delegate_call = true : suggestion

# code block preferences
csharp_prefer_braces = true : error

# -------------------------------------------------------------------------------------------------
# FORMATTING CONVENTIONS
# -------------------------------------------------------------------------------------------------
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#formatting-conventions

# organized usings
dotnet_sort_system_directives_first = true

# newline options
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

#indentation options
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = no_change

# spacing options
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_parentheses = false

# wrapping options
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

# -------------------------------------------------------------------------------------------------
# NAMING CONVENTIONS
# -------------------------------------------------------------------------------------------------
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions

# styles
dotnet_naming_style.pascal_style.capitalization = pascal_case
dotnet_naming_style.camel_style.capitalization = camel_case
dotnet_naming_style.underscore_camel_style.capitalization = camel_case
dotnet_naming_style.underscore_camel_style.required_prefix = _

# symbols
dotnet_naming_symbols.public_symbols.applicable_kinds = property,method,field,event,delegate
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public
dotnet_naming_symbols.private_lower_case_symbols.applicable_kinds = field
dotnet_naming_symbols.private_lower_case_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_upper_case_symbols.applicable_kinds = property,method,event,delegate
dotnet_naming_symbols.private_upper_case_symbols.applicable_accessibilities = private
dotnet_naming_symbols.object_symbols.applicable_kinds = class,struct,enum
dotnet_naming_symbols.const_symbols.applicable_kinds = field
dotnet_naming_symbols.const_symbols.applicable_accessibilities = *
dotnet_naming_symbols.const_symbols.required_modifiers = const

# const must be pascal case
dotnet_naming_rule.const_fields_must_have_pascal_casing.symbols = const_symbols
dotnet_naming_rule.const_fields_must_have_pascal_casing.style = pascal_style
dotnet_naming_rule.const_fields_must_have_pascal_casing.severity = warning

# objects must have pascal casing
dotnet_naming_rule.objects_must_have_pascal_casing.symbols = object_symbols
dotnet_naming_rule.objects_must_have_pascal_casing.style = pascal_style
dotnet_naming_rule.objects_must_have_pascal_casing.severity = warning

# public members must have pascal casing
dotnet_naming_rule.public_members_must_have_pascal_casing.symbols = public_symbols
dotnet_naming_rule.public_members_must_have_pascal_casing.style = pascal_style
dotnet_naming_rule.public_members_must_have_pascal_casing.severity = warning

# private lower case members must have camel casing
dotnet_naming_rule.private_lower_case_members_must_have_pascal_casing.symbols = private_lower_case_symbols
dotnet_naming_rule.private_lower_case_members_must_have_pascal_casing.style = underscore_camel_style
dotnet_naming_rule.private_lower_case_members_must_have_pascal_casing.severity = warning

# private upper case members must have pascal casing
dotnet_naming_rule.private_upper_case_members_must_have_pascal_casing.symbols = private_upper_case_symbols
dotnet_naming_rule.private_upper_case_members_must_have_pascal_casing.style = pascal_style
dotnet_naming_rule.private_upper_case_members_must_have_pascal_casing.severity = warning
